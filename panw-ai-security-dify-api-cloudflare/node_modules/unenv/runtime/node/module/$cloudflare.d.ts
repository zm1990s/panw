import type nodeModule from "node:module";
export { Module, SourceMap, _cache, _extensions, _debug, _pathCache, _findPath, _initPaths, _load, _nodeModulePaths, _preloadModules, _resolveFilename, _resolveLookupPaths, builtinModules, constants, enableCompileCache, findSourceMap, getCompileCacheDir, globalPaths, isBuiltin, register, runMain, syncBuiltinESMExports, wrap, } from "./index";
export declare const createRequire: typeof nodeModule.createRequire;
declare const _default: {
    Module: {
        readonly Module: /*elided*/ any;
        SourceMap: any;
        _cache: any;
        _extensions: {
            ".js": (...args: any) => any;
            ".json": (...args: any) => any;
            ".node": (...args: any) => any;
        };
        _debug: {
            (...data: any[]): void;
            (message?: any, ...optionalParams: any[]): void;
        };
        _pathCache: any;
        _findPath: (...args: any) => any;
        _initPaths: (...args: any) => any;
        _load: (...args: any) => any;
        _nodeModulePaths: (...args: any) => any;
        _preloadModules: (...args: any) => any;
        _resolveFilename: (...args: any) => any;
        _resolveLookupPaths: (...args: any) => any;
        builtinModules: any;
        constants: any;
        createRequire: (filename: string) => ((...args: any) => any) & {
            resolve: ((...args: any) => any) & {
                paths: (...args: any) => any;
            };
            cache: any;
            extensions: {
                ".js": (...args: any) => any;
                ".json": (...args: any) => any;
                ".node": (...args: any) => any;
            };
            main: undefined;
        };
        enableCompileCache: any;
        findSourceMap: any;
        getCompileCacheDir: any;
        globalPaths: string[];
        isBuiltin: any;
        register: any;
        runMain: any;
        syncBuiltinESMExports: any;
        wrap: any;
        flushCompileCache: any;
    };
    SourceMap: any;
    _cache: any;
    _extensions: {
        ".js": (...args: any) => any;
        ".json": (...args: any) => any;
        ".node": (...args: any) => any;
    };
    _debug: {
        (...data: any[]): void;
        (message?: any, ...optionalParams: any[]): void;
    };
    _pathCache: any;
    _findPath: (...args: any) => any;
    _initPaths: (...args: any) => any;
    _load: (...args: any) => any;
    _nodeModulePaths: (...args: any) => any;
    _preloadModules: (...args: any) => any;
    _resolveFilename: (...args: any) => any;
    _resolveLookupPaths: (...args: any) => any;
    builtinModules: any;
    enableCompileCache: any;
    constants: any;
    createRequire: any;
    findSourceMap: any;
    getCompileCacheDir: any;
    globalPaths: string[];
    isBuiltin: any;
    register: any;
    runMain: any;
    syncBuiltinESMExports: any;
    wrap: any;
};
export default _default;
